name: RISC-V Qemu test

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  Build_Test:
    runs-on: ubuntu-latest
    env:
        xuetie_toolchain: https://occ-oss-prod.oss-cn-hangzhou.aliyuncs.com/resource//1698113812618
        toolchain_file_name: Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.8.0-20231018.tar.gz
    strategy:
        fail-fast: false
        matrix:
            include:
              # - target: RISCV_GENERIC
              #   triple: riscv64-unknown-linux-gnu
              #   opts: -DTARGET_ARCH=RISCV_GENERIC
              - target: RISCV_VECTOR
                triple: riscv64-unknown-linux-gnu
                opts: -DTARGET_ARCH=RISCV_VECTOR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: install build deps
        run: |
            sudo apt-get update
            sudo apt-get install cmake ninja-build autoconf automake autotools-dev make ccache

      - name: Checkout qemu
        uses: actions/checkout@v3
        with:
            repository: T-head-Semi/qemu
            path: qemu
            ref: 1e692ebb43d396c52352406323fc782c1ac99a42

      - name: Build qemu
        run: |
            wget https://github.com/revyos/qemu/commit/5164bca5a4bcde4534dc1a9aa3a7f619719874cf.patch
            cd qemu
            patch -p1 < ../5164bca5a4bcde4534dc1a9aa3a7f619719874cf.patch
            ./configure --prefix=$GITHUB_WORKSPACE/qemu-install --target-list=riscv64-linux-user --disable-system
            make -j$(nproc)
            make install

      - name: Compilation cache
        uses: actions/cache@v3
        with:
            path: ~/.ccache
            key: ccache-${{ runner.os }}-${{ matrix.target }}-${{ github.ref }}-${{ github.sha }}
            restore-keys: |
                ccache-${{ runner.os }}-${{ matrix.target }}-${{ github.ref }}
                ccache-${{ runner.os }}-${{ matrix.target }}

      - name: Configure ccache
        run: |
            test -d ~/.ccache || mkdir -p ~/.ccache
            echo "max_size = 100M" > ~/.ccache/ccache.conf
            echo "compression = true" >> ~/.ccache/ccache.conf
            ccache -s

      - name: Get Toolchain
        run: |
            wget ${xuetie_toolchain}/${toolchain_file_name}
            tar -xvf ${toolchain_file_name} -C /opt

      - name: Build
        run: |
            export PATH="/opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.8.0/bin:$PATH"
            cmake CMakeLists.txt ${{ matrix.opts }} -DENABLE_TEST=ON -DENABLE_BENCH=ON -DUSE_OPENMP=ON -DENABLE_EXAMPLES=ON -DCMAKE_C_COMPILER=${{ matrix.triple }}-gcc -DCMAKE_CXX_COMPILER=${{ matrix.triple }}-g++ -DBUILD_TYPE=Release -DBUILD_STATIC=ON -B_build
            cmake --build _build

      - name: Test
        run: |
            export PATH="$GITHUB_WORKSPACE/qemu-install/bin/:$PATH"
            qemu-riscv64 -cpu c910v -L /opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.8.0/sysroot/ ./_build/perf/dft_perf
            qemu-riscv64 -cpu c910v -L /opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.8.0/sysroot/ ./_build/perf/dft2_perf
            qemu-riscv64 -cpu c910v -L /opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.8.0/sysroot/ ./_build/perf/dft4_perf
            qemu-riscv64 -cpu c910v -L /opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.8.0/sysroot/ ./_build/perf/dft8_perf
            qemu-riscv64 -cpu c910v -L /opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.8.0/sysroot/ ./_build/perf/dft16_perf
            qemu-riscv64 -cpu c910v -L /opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.8.0/sysroot/ ./_build/perf/dft32_perf
            qemu-riscv64 -cpu c910v -L /opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.8.0/sysroot/ ./_build/test/fft_test
